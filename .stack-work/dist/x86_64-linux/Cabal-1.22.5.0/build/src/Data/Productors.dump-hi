
==================== FINAL INTERFACE ====================
2016-02-16 00:23:59.637239 UTC

interface datap_FBufWoQ2EXj4DfMtluHI6f:Data.Productors 7103
  interface hash: d1dd1cc981585d072b3aa51fbb4122c1
  ABI hash: 5e26c5fd9517b9d48439382d32d27dbe
  export-list hash: 644a4ea64675148819abe0cd6199262d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f3103c03430bbe71f2242be65da29383
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Productors.>==>
  Data.Productors.>>==
  Data.Productors.Effect{Data.Productors.eta}
  Data.Productors.EffectorLT{Data.Productors.liftEff}
  Data.Productors.EffectorM{Data.Productors.multEff}
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
b6eef04fd861bea401da31076000f253
  (>==>) ::
    Data.Productors.EffectorM m1 m2 m =>
    (a -> m1 b) -> (b -> m2 c) -> a -> m c
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LLLC(S)),U(1*U(1*U(1*C1(C1(U)),A),A),A,A,1*C1(U))><L,1*C1(U)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ (m1 :: * -> *)
                   @ b
                   @ (m2 :: * -> *)
                   @ c
                   @ (m :: * -> *)
                   $dEffectorM :: Data.Productors.EffectorM m1 m2 m
                   eta1 :: a -> m1 b
                   eta2 :: b -> m2 c
                   eta3 :: a ->
                 Data.Productors.multEff
                   @ m1
                   @ m2
                   @ m
                   $dEffectorM
                   @ c
                   (GHC.Base.fmap
                      @ m1
                      (Data.Productors.$p1Effect
                         @ m1
                         (Data.Productors.$p1EffectorM @ m1 @ m2 @ m $dEffectorM))
                      @ b
                      @ (m2 c)
                      eta2
                      (eta1 eta3))) -}
3ca709e01e0fa1d633e2b5e2192b6593
  (>>==) ::
    Data.Productors.EffectorM m1 m2 m => m1 a -> (a -> m2 b) -> m b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLC(S)),U(1*U(1*U(1*C1(C1(U)),A),A),A,A,1*C1(U))><L,U><L,U>,
     Unfolding: (\ @ (m1 :: * -> *)
                   @ a
                   @ (m2 :: * -> *)
                   @ b
                   @ (m :: * -> *)
                   $dEffectorM :: Data.Productors.EffectorM m1 m2 m
                   eta1 :: m1 a
                   eta2 :: a -> m2 b ->
                 Data.Productors.multEff
                   @ m1
                   @ m2
                   @ m
                   $dEffectorM
                   @ b
                   (GHC.Base.fmap
                      @ m1
                      (Data.Productors.$p1Effect
                         @ m1
                         (Data.Productors.$p1EffectorM @ m1 @ m2 @ m $dEffectorM))
                      @ a
                      @ (m2 b)
                      eta2
                      eta1)) -}
4e223f6cf984c7024507896ef8caa285
  class GHC.Base.Functor f => Effect (f :: * -> *) where
    eta :: a -> f a
bcd98f0836d8a3ff46614bfbfefef4df
  class (Data.Productors.Effect f, Data.Productors.Effect g) =>
        EffectorLT (f :: * -> *) (g :: * -> *) where
    liftEff :: f a -> g a
19f197fd282329b7abae91fe724d3254
  class (Data.Productors.Effect f, Data.Productors.Effect g,
         Data.Productors.Effect h) =>
        EffectorM (f :: * -> *) (g :: * -> *) (h :: * -> *) | f
                                                              g -> h where
    multEff :: f (g a) -> h a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

